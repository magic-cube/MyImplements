正则表达式语法
 *选择符和分组

	| 	“或”的关系，匹配左边或右边
	（）	捕获组 
		例：（[a-z]{2}）\1 匹配类似abab gogo dodo形式的数
		捕获第一次和第二次匹配出来的 例如ab \1是再拿出来，因而匹配到的是abab形式的字符
		（[a-z]{2}）\1\1 则是匹配ababab形式的字符
	

		
	-\nnn 反向引用，每一对（）会分配一个编号，使用（）的捕获根据左括号的顺序从1开始自动编号
	-通过反向引用，可以对分组已捕获的字符串进行引用
		
	(?:   )  非捕获组，需要他提供的组织结构，但不保存，节省内存，在做大量文本处理时可能用到

	
 *预搜素（零宽断言）
	零宽度，指对位置的匹配
	
	[a-z]+(?=ing)  匹配以ing结尾的前面的字符

	[a-z]+(?=\d+) 匹配以一个或多个数字结尾的前面的字符
	

	(?=exp) 断音自身出现的位置后面能匹配表达式exp
	(?!exp) 断言此位置的后面不能匹配表达式exp

	(?<=exp) 断言自身出现的位置前面能匹配表达式
	(<?!exp) 断言此位置前面不能匹配表达式exp


	